--Task 1
--Creating modulo-k counter
--modified 8bit counter

library ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.std_logic_unsigned.all;

entity part_2 is
	port
	(
		KEY	: in std_logic_vector(1 downto 0);
		LEDR 	: out std_logic_vector(9 downto 0); --8bit output and rollover
		CLOCK_50 : in std_logic;
		o0		: out std_logic_vector(11 downto 0);
		HEX0, HEX1, HEX2	: out std_logic_vector(6 downto 0)
		
	);
	
end part_2;

architecture behav of part_2 is
	component counter
	generic
	(
		n : integer := 4;
		k : integer := 8
		
	);
	
	port
	(
	
		clk	: in std_logic;
		R		: in std_logic;
		q		: out std_logic_vector(n-1 downto 0);
		rollover : out std_logic
	);
	
	end component;
	
	component Hex7 
	port
	(
		c	: in std_logic_vector(3 downto 0);
		disp	: out std_logic_vector(0 to 6);
	);
	
	end component;
	
signal c0	: std_logic_vector(25 downto 0);
--setting up output for each hex
signal s0,s1,s2 	: std_logic_vector(3 downto 0);


-- 1, 10, 100
signal ons,tns,hunds	: std_logic;
signal x1,y1,z1		: std_logic;
signal x2,y2,z2		: std_logic;

	
	begin
	
	o0(3 downto 0) <= s0;
	o0(7 downto 4) <= s1;
	o0(11 downto 8) <= s2;
	
	--base and reset
	x2 <= x1 and KEY(0);
	y2 <= y1 and KEY(0);
	z2 <= z1 and KEY(0);
	
	cnt : counter
			generic map ( n => 26, k => 50000000)
			port map ( CLOCK_50, KEY(0), c0);
	c_ons : counter
			generic map ( n => 4, k => 11 )
			port map ( ons, 2, s0);
	c_tns : counter
			generic map ( n => 4, k => 11 )
			port map ( tens, y2, s1);
	c_hunds	: counter
			generic map ( n => 4, k => 11 )
			port map	( hunds, z2,s2);
			
	
	process (CLOCK_50) begin
		if rising_edge(CLOCK_50) then
			if (c0 = 49999999) then
				ons <= '1';
			else
				ons <= '0';
			end if;
		
			if (s0 = 10) then
				tns <= '1';
				x1	<= '0';
			else
				tns <= '0';
				x1 <= '1';
			end if; 
		
			if (s1 = 10) then
				hunds <= '1';
				y1 <= '0';
			else
				hunds <= '0';
				y1 <= '1';
			end if;
		
		z1 <= '1';
		
	end if;
end process;

d_1s 	 : Hex7 port map (s0, HEX0);
d_10s  : Hex7 port map (s1, HEX1);
d_100s : Hex7 port map (s2, HEX2);

	 

		
end behav;